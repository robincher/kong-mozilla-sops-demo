# Kong for Kubernetes with Kong Enterprise with Enterprise features enabled and
# exposed via TLS-enabled Ingresses. Before installing:
# * Several settings (search for the string "CHANGEME") require user-provided
#   Secrets. These Secrets must be created before installation.
# * Ingresses reference example "<service>.kong.CHANGEME.example" hostnames. These must
#   be changed to an actual hostname that resolve to your proxy.
# * Ensure that your session configurations create cookies that are usable
#   across your services. The admin session configuration must create cookies
#   that are sent to both the admin API and Kong Manager, and any Dev Portal
#   instances with authentication must create cookies that are sent to both
#   the Portal and Portal API.
image:
    repository: kong/kong-gateway
    tag: "3.1"
env:
    prefix: /kong_prefix/
    log_level: debug
    database: postgres
    proxy_url: http://proxy.kic.aws.kongtest.net:8000
    admin_gui_url: http://manager.kic.aws.kongtest.net:8002
    admin_api_uri: http://admin.kic.aws.kongtest.net:8001
    portal_gui_host: proxy.istio.aws.kongtest.net:8003
    portal_api_url: http://proxy.istio.aws.kongtest.net:8004
    portal_gui_protocol: http
    session_conf_secret: kong-session-config
    #portal_session_conf: '{"storage":"kong","cookie_name":"portal_session","secret":"kong456","cookie_secure":false}'
    portal_session_conf:
        valueFrom:
            secretKeyRef:
                name: kong-session-config
                key: portal_session_conf
    portal_auth: basic-auth
    #password: KongRul3z!
    password:
        valueFrom:
            secretKeyRef:
                name: kong-enterprise-superuser-password
                key: password
admin:
    enabled: true
    type: LoadBalancer
    annotations:
        konghq.com/protocol: https
    http:
        # Enable plaintext HTTP listen for the admin API
        # Disabling this and using a TLS listen only is recommended for most configuration
        enabled: true
        servicePort: 8001
        containerPort: 8001
        # Set a nodePort which is available if service type is NodePort
        nodePort: 31001
        # Additional listen parameters, e.g. "reuseport", "backlog=16384"
        parameters: []
    tls:
        enabled: false
        servicePort: 8444
        containerPort: 8444
        nodePort: 31444
        parameters:
            - http2
    ingress:
        # changed
        enabled: false
        tls: CHANGEME-admin-tls-secret
        hostname: admin.kong.CHANGEME.example
        annotations:
            kubernetes.io/ingress.class: kong
        path: /
proxy:
    enabled: true
    type: LoadBalancer
    annotations: {}
    http:
        # Enable plaintext HTTP listen for the proxy
        enabled: true
        servicePort: 80
        containerPort: 8000
        # Set a nodePort which is available if service type is NodePort
        #nodePort: 31000
        # Additional listen parameters, e.g. "reuseport", "backlog=16384"
        parameters: []
        #    - http2
    tls:
        enabled: true
        servicePort: 443
        containerPort: 8443
        nodePort: 31443
        parameters:
            - http2
    stream: {}
    ingress:
        enabled: false
        annotations: {}
        path: /
    externalIPs: []
enterprise:
    enabled: true
    # CHANGEME: https://github.com/Kong/charts/blob/main/charts/kong/README.md#kong-enterprise-license
    license_secret: kong-enterprise-license
    vitals:
        enabled: true
    portal:
        enabled: true
    rbac:
        enabled: true
        admin_gui_auth: basic-auth
        session_conf_secret: kong-session-config
        admin_gui_auth_conf_secret: CHANGEME-admin-gui-auth-conf-secret
    smtp:
        enabled: false
        portal_emails_from: none@example.com
        portal_emails_reply_to: none@example.com
        admin_emails_from: none@example.com
        admin_emails_reply_to: none@example.com
        smtp_admin_emails: none@example.com
        smtp_host: smtp.example.com
        smtp_port: 587
        smtp_auth_type: ""
        smtp_ssl: nil
        smtp_starttls: true
        auth:
            # e.g. postmaster@example.com
            smtp_username: ""
            smtp_password_secret: CHANGEME-smtp-password
manager:
    enabled: true
    type: LoadBalancer
    annotations:
        konghq.com/protocol: https
    http:
        # Enable plaintext HTTP listen for Kong Manager
        enabled: true
        servicePort: 8002
        containerPort: 8002
        # Set a nodePort which is available if service type is NodePort
        #nodePort: 31002
        # Additional listen parameters, e.g. "reuseport", "backlog=16384"
        parameters: []
    tls:
        enabled: false
        servicePort: 8445
        containerPort: 8445
        parameters:
            - http2
    ingress:
        # changed
        enabled: false
        tls: CHANGEME-manager-tls-secret
        hostname: manager.kong.CHANGEME.example
        annotations: {}
        path: /
    externalIPs: []
portal:
    enabled: true
    type: LoadBalancer
    annotations:
        konghq.com/protocol: https
    http:
        # Enable plaintext HTTP listen for the Developer Portal
        enabled: true
        servicePort: 8003
        containerPort: 8003
        # Set a nodePort which is available if service type is NodePort
        #nodePort: 31003
        # Additional listen parameters, e.g. "reuseport", "backlog=16384"
        parameters: []
    tls:
        enabled: false
        servicePort: 8446
        containerPort: 8446
        parameters:
            - http2
    ingress:
        # changed
        enabled: false
        tls: CHANGEME-portal-tls-secret
        hostname: portal.kong.CHANGEME.example
        annotations:
            kubernetes.io/ingress.class: kong
        path: /
    externalIPs: []
portalapi:
    enabled: enable
    type: LoadBalancer
    annotations:
        konghq.com/protocol: https
    http:
        # Enable plaintext HTTP listen for the Developer Portal API
        enabled: true
        servicePort: 8004
        containerPort: 8004
        # Set a nodePort which is available if service type is NodePort
        #nodePort: 31004
        # Additional listen parameters, e.g. "reuseport", "backlog=16384"
        parameters: []
    tls:
        enabled: false
        servicePort: 8447
        containerPort: 8447
        parameters:
            - http2
    ingress:
        enabled: false
        tls: CHANGEME-portalapi-tls-secret
        hostname: portalapi.kong.CHANGEME.example
        annotations:
            kubernetes.io/ingress.class: kong
        path: /
    externalIPs: []
postgresql:
    enabled: true
    postgresqlUsername: kong
    postgresqlDatabase: kong
    postgresqlPassword: kong
    service:
        port: 5432
ingressController:
    enabled: true
    installCRDs: false
    env:
        kong_admin_token:
            valueFrom:
                secretKeyRef:
                    #CHANGEME
                    name: kong-enterprise-superuser-password
                    #CHANGEME
                    key: password
